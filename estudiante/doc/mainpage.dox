/*! \mainpage Título de la página principal

@image html doxyque.png "Pie de foto"

# Información sobre Doxygen
Doxygen admite el uso de la [sintaxis de Markdown (Consulta aquí los comandos básicos)](https://www.markdownguide.org/basic-syntax).

Así como el uso de  <a href="https://htmlcheatsheet.com/">sintaxis <strong>HTML</strong></a>. Esto es especialmente útil
para aquellos aspectos que Markdown no permite modificar, como el <span  style="color:red">color</span>. Aunque es buena idea evitarlo en la medida de lo posible, por dos
motivos:

1. <span style="font-size:1.1em">Hace el código <strong>poco</strong> <span style="  background-image: linear-gradient(to left, #4285f4, #34a853, #fbbc05, #ea4335); -webkit-background-clip: text; color: transparent;"> <strong> LEGIBLE </strong> </span></span>
2. La idea detrás de Markdown es separar _aspecto_ y _contenido_. Y es una __gran idea__.


Idealmente el aspecto debería resolverse mediante un documento ``.css`` configurado en el archivo ``Doxyfile.in``.
Si te interesa, puedes echarle un vistazo a la [documentación](https://www.doxygen.nl/manual/customize.html) o a
temas customizados como [este](https://jothepro.github.io/doxygen-awesome-css/). Aunque el tema por defecto nos parece
perfecto, _CLÁSICO_. Así puedes centrarte en el contenido.

Por último, lo hemos visto en clase y hay suficientes ejemplos en el código fuente proporcionado, pero puedes consultar la
mayor parte de la sintaxis de Doxygen para comentar código en su
[documentación](https://www.doxygen.nl/manual/docblocks.html).

# Introducción

Esta practica consiste en la creación de un TDA Video, que consiste en una secuencia de imagenes, que sera manipulada por distintos metodos. 

# Ejecutables

@image html invert.png
## Negativo:

Calcula el negativo de una imagen

> __negativo__ \<FichImagenOriginal\> \<FichImagenDestino\>
@param "<FichImagenOriginal>" Imagen PGM a la que se va a calcular
@param <FichImagenDestino> Imagen PGM resultado de calcular el negativo

## Rebobinar:

Rebobina un video ordenando sus frames desde el ultimo hacia el primero en un nuevo video, que es lo que devuelve. 
> rebobinar \<FichVideoOriginal\> \<FichVideoDestino\>
@param "<FichVideoOriginal>" Fichero donde se encuentran las imagenes del video a rebobinar
@param "<FichVideoDestino>" Fichero donde se va a escribir el video rebobinado

## Morphing:
Crea un video cuyo contenido es una transicion suave de una imagen a otra, o un cambio de una imagen a otra.
> morphing \<FichImagen1\> \<FichImagen2\> \<FichVideoDestino\> \<NumFotogramas\>
@param "<FichImagen1>" Imagen PGM que va a cambiar
@param "<FichImagen2>" Imagen PGM a la que se va a cambiar
@param "<FichVideoDestino>" Fichero donde se va a escribir el video del morphing
@param "<NumFotogramas>" Numero de pasos para realizar la transformacion

*/
